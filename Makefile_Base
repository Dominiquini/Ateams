.DEFAULT_GOAL :=	all


CC = g++
AR = ar
RANLIB = ranlib


ifeq ($(DEBUG), true)
  CXXFLAGS = -Wall -pedantic -O0 -g3 -march=native -mtune=native -masm=intel
else ifeq ($(PROFILE), true)
  CXXFLAGS	= -Wall -pedantic -O0 -pg -march=native -mtune=native -masm=intel
else
  CXXFLAGS	= -Wall -pedantic -O3 -march=native -mtune=native -masm=intel
endif


ifeq ($(OS), Windows_NT)
  LDFLAGS	= -lpthread -lopengl32 -lGLU32 -lfreeglut -lxerces-c
else
  LDFLAGS 	= -lpthread -lGL -lGLU -lglut -lxerces-c
endif


ARFLAGS 	= -rsc


SRC_EXT 	= .cpp
HEADER_EXT 	= .hpp
OBJ_EXT 	= .o
LIB_EXT 	= .a
DEPS_EXT 	= .o.d
ifeq ($(OS), Windows_NT)
  BIN_EXT 	= .exe
else
  BIN_EXT 	=
endif


PROJ = 

PATH_ROOT = ./

PATH_BASE 				= $(PATH_ROOT)Ateams_Base/

PATH_BINPACKING 		= $(PATH_ROOT)BinPacking/
PATH_FLOWSHOP 			= $(PATH_ROOT)FlowShop/
PATH_GRAPHCOLORING 		= $(PATH_ROOT)GraphColoring/
PATH_JOBSHOP 			= $(PATH_ROOT)JobShop/
PATH_KNAPSACK 			= $(PATH_ROOT)KnapSack/
PATH_TRAVELLINGSALESMAN = $(PATH_ROOT)TravellingSalesman/

PATH_BASE_SRC 	= $(PATH_BASE)src/
PATH_BASE_BIN 	= $(PATH_BASE)bin/

PATH_PROJ_PARAM = $(PATH_BASE)parameters/
PATH_PROJ_INPUT = $(PATH_ROOT)$(PROJ)/inputs/
PATH_PROJ_SRC 	= $(PATH_ROOT)$(PROJ)/src/
PATH_PROJ_BIN 	= $(PATH_ROOT)$(PROJ)/bin/
PATH_PROJ_RES	= $(PATH_ROOT)$(PROJ)/results/

BASE_SRCS		= $(wildcard $(PATH_BASE_SRC)*$(SRC_EXT))
BASE_HEADERS	= $(wildcard $(PATH_BASE_SRC)*$(HEADER_EXT))
BASE_OBJS		= $(subst $(PATH_BASE_SRC),$(PATH_BASE_BIN),$(subst $(SRC_EXT),$(OBJ_EXT),$(BASE_SRCS)))
BASE_LIB		= $(PATH_BASE_BIN)Ateams_Base$(LIB_EXT)
BASE_DEPS		= $(BASE_OBJS:$(OBJ_EXT)=$(DEPS_EXT))

PROJ_SRCS		= $(wildcard $(PATH_PROJ_SRC)*$(SRC_EXT))
PROJ_HEADERS	= $(wildcard $(PATH_PROJ_SRC)*$(HEADER_EXT))
PROJ_OBJS		= $(subst $(PATH_PROJ_SRC),$(PATH_PROJ_BIN),$(subst $(SRC_EXT),$(OBJ_EXT),$(PROJ_SRCS)))
PROJ_BIN		= $(PROJ_OBJS:$(OBJ_EXT)=$(BIN_EXT))
PROJ_DEPS		= $(PROJ_OBJS:$(OBJ_EXT)=$(DEPS_EXT))

PATTERN_BASE_SRCS		= $(PATH_BASE_SRC)%$(SRC_EXT)
PATTERN_BASE_HEADERS	= $(PATH_BASE_SRC)%$(HEADER_EXT)
PATTERN_BASE_OBJS		= $(PATH_BASE_BIN)%$(OBJ_EXT)

PATTERN_PROJ_SRCS		= $(PATH_PROJ_SRC)%$(SRC_EXT)
PATTERN_PROJ_HEADERS	= $(PATH_PROJ_SRC)%$(HEADER_EXT)
PATTERN_PROJ_OBJS		= $(PATH_PROJ_BIN)%$(OBJ_EXT)

NINJA_BUILD_FILE	= build.ninja
NINJA_OUTPUTS		= .ninja_deps .ninja_log

PROFILE_OUTPUT = gmon.out


MKDIR = mkdir -p
RM = rm -rf
ECHO = echo


print_vars:
			@$(ECHO) - MAKEFILE_FLAGS: $(MAKEFLAGS)
			@$(ECHO) - BASE_SOURCES: $(BASE_HEADERS) $(BASE_SRCS)
			@$(ECHO) - BASE_OBJS: $(BASE_OBJS)
			@$(ECHO) - BASE_LIB: $(BASE_LIB)
			@$(ECHO) - PROJ_SOURCES: $(PROJ_HEADERS) $(PROJ_SRCS)
			@$(ECHO) - PROJ_OBJS: $(PROJ_OBJS)
			@$(ECHO) - PROJ_BIN: $(PROJ_BIN)
